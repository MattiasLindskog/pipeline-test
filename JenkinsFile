node('node') {

    try {
        stage('Checkout') {
            checkout scm: [
                    $class: 'GitSCM',
                    branches: [[name: '*/master']],
                    userRemoteConfigs: [[url: 'https://github.com/MattiasLindskog/pipeline-test']],
                    extensions: [
                            [$class: 'CleanBeforeCheckout']
                    ]
            ]
        }


        stage('Build and deploy to sandbox', concurrency: 1) {
            def jenkinsNodeVersion = tool 'NodeJS 4.3.2'
            withEnv(["PATH+NODE=${jenkinsNodeVersion}/bin", "ENVIRONMENT=${ENVIRONMENT}"]) {

                // Execute build script
                sh './scripts/build-and-deploy.sh sandbox'

                // Publish JsHint results
                step([$class: 'CheckStylePublisher', canComputeNew: false, defaultEncoding: '', healthy: '', pattern: '**/jshint-checkstyle.xml', unHealthy: ''])
                // Publish API docs
                publishHTML target: [allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: 'ifttt/dist/docs', reportFiles: 'ifttt-api.html', reportName: 'API docs']
            }
        }
    }
    catch (err) {
        // Set build result so that it is picked up by mailer
        currentBuild.result = 'FAILURE'
        throw err
    }
    finally {
        // Always notify mailer
        step([$class: 'Mailer', notifyEveryUnstableBuild: true, recipients: 'awsjenkins@animaconnected.onmicrosoft.com', sendToIndividuals: false])

        // Publish test results
        step([$class: 'JUnitResultArchiver', testResults: '**/xunit*.xml'])
    }
}